<h1>CPAN Testers Matrix: [% dist_name %]</h1>

<div id="myChart" style="height: 385px; width: 768px"></div>
<script>
let maxShowColumns = 1;
$(() => {
  let query = `/api/list?dist=[% dist_name | url %]`;
  [% IF query.os %]
    query += `&os=[% query.os | url %]`;
  [% END %]
  [% IF query.vers %]
    query += `&vers=[% query.vers | url %]`;
  [% END %]
  $.when(
    $.getJSON(query)
  ).done( function (d1) {
  });
});

function resetPieCharts() {
  const pieCharts = document.querySelectorAll(".pie-chart-icon");
  pieCharts.forEach(pieChart => {
    const passPct = (+pieChart.getAttribute("data-pass") || 0)    /  pieChart.getAttribute("data-total");
    const failPct = (+pieChart.getAttribute("data-fail") || 0)    /  pieChart.getAttribute("data-total");
    const naPct   = (+pieChart.getAttribute("data-na") || 0)      /  pieChart.getAttribute("data-total");
    const unkPct  = (+pieChart.getAttribute("data-unknown") || 0) /  pieChart.getAttribute("data-total");
    const bgcolor = "lightgray";
    pieChart.style.background = `conic-gradient(
      green 0% ${passPct*100}%, 
      red ${passPct*100}% ${(passPct+failPct)*100}%,
      pink ${(passPct+failPct)*100}% ${(passPct+failPct+naPct)*100}%,
      black ${(passPct+failPct+naPct)*100}% 100%
      )`;
  });
}
</script>